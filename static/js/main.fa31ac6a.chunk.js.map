{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","changeProjectHandler","index","state","currentProjectSelectedIndex","projects","clockedIn","setState","paused","currentlyPaused","pauseTimerHandler","getCurrentPunchSecondsHandler","timerRunning","startTimerHandler","latestPunch","punchHistory","length","project","milliseconds","Date","now","clockInTimeInMS","currentSeconds","Math","floor","timeAdjusted","addProjectHandler","newProject","name","projectID","totalSeconds","hourlyRate","timeClockedIn","createProjectHandler","currentProjects","push","clockInHandler","toast","error","getTimeHandler","addNewPunchHandler","clockOutHandler","punchOut","clockedOut","time","hours","getHours","minutes","getMinutes","getDateHandler","today","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","newPunch","date","punchIn","calculateTotalBillable","slice","_this","incrementer","setInterval","clearInterval","pauseClockHandler","resumeClockHandler","getSeconds","getTotalProjectTime","value","formatTimeFromSecondsHandler","seconds","clockInOutHandler","changeProjectInfoHandler","e","infoType","target","newProjects","concat","modifyTimerHandler","modifyHourlyRateHandler","configure","className","this","map","projectSettingsButtonHandler","key","onMouseDown","style","justifySelf","marginLeft","currentProjectDetails","Component","Project","stopPropagation","displaySettings","SettingsBanner","type","onChange","color","icon","faCog","Punch","displayDetailsHandler","showDetails","PunchDetailsContainer","adjustedSeconds","projectDetails","toFixed","animate","animationDuration","animationEasing","cx","cy","data","title","label","labelPosition","lengthAngle","lineWidth","onClick","undefined","onMouseOut","onMouseOver","paddingAngle","radius","rounded","startAngle","height","abs","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.fa31ac6a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './css/App.css'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport projects from './PunchHistory.json'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\nimport PieChart from 'react-minimal-pie-chart';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      projects: projects,\n      currentProjectSelectedIndex: 0,\n      clockedIn: false,\n      currentlyPaused: false,\n      timerRunning: false,\n    }\n  }\n\n  componentDidMount() {\n    toast.configure()\n  }\n\n  changeProjectHandler = (index) => {\n    if (index !== this.state.currentProjectSelectedIndex) {\n      let projects = this.state.projects\n      if (projects[index].clockedIn) {\n        this.setState({ clockedIn: true })\n        if (!projects[index].paused) {\n          this.setState({ currentlyPaused: false })\n          this.getCurrentPunchSecondsHandler(index)\n          if (!this.state.timerRunning) {\n            this.startTimerHandler()\n          }\n        } else {\n          this.setState({ currentlyPaused: true })\n          this.pauseTimerHandler()\n        }\n      } else {\n        this.setState({ clockedIn: false, currentlyPaused: false })\n        this.pauseTimerHandler()\n      }\n      this.setState({ currentProjectSelectedIndex: index, projects: projects })\n    }\n  }\n\n  getCurrentPunchSecondsHandler = (index) => {\n    let latestPunch = this.state.projects[index].punchHistory.length - 1\n    let project = this.state.projects\n    let milliseconds = Date.now() - project[index].punchHistory[latestPunch].clockInTimeInMS\n    project[index].currentSeconds = Math.floor(milliseconds / 1000) + project[index].timeAdjusted\n    this.setState({ projects: project })\n  }\n\n  addProjectHandler = () => {\n    let newProject = {\n      name: 'New Project',\n      projectID: this.state.projects.length,\n      paused: false,\n      currentSeconds: 0,\n      timeAdjusted: 0,\n      totalSeconds: 0,\n      hourlyRate: 0,\n      timeClockedIn: \"\",\n      clockedIn: false,\n      punchHistory: [],\n    }\n    this.createProjectHandler(newProject)\n  }\n\n  createProjectHandler = (newProject) => {\n    let currentProjects = this.state.projects\n    currentProjects.push(newProject)\n    this.setState({ projects: currentProjects })\n  }\n\n  clockInHandler = () => {\n    if (this.state.currentProjectSelectedIndex === -1) {\n      toast.error('Select a project before clocking in')\n    } else {\n      this.startTimerHandler()\n      let project = this.state.projects\n      project[this.state.currentProjectSelectedIndex].clockedIn = true\n      project[this.state.currentProjectSelectedIndex].paused = false\n      project[this.state.currentProjectSelectedIndex].timeClockedIn = this.getTimeHandler()\n      this.addNewPunchHandler()\n      this.setState({ projects: project, clockedIn: true })\n    }\n  }\n\n  clockOutHandler = () => {\n    this.pauseTimerHandler()\n    let project = this.state.projects\n    let index = this.state.currentProjectSelectedIndex\n    let latestPunch = project[index].punchHistory.length - 1\n    project[index].clockedIn = false\n    project[index].paused = false\n    project[index].totalSeconds += project[index].currentSeconds\n    project[index].punchHistory[latestPunch].totalSeconds = project[index].currentSeconds\n    project[index].currentSeconds = 0\n    project[index].punchHistory[latestPunch].punchOut = this.getTimeHandler()\n    project[index].punchHistory[latestPunch].clockedOut = true\n    project[index].punchHistory[latestPunch].timeAdjusted = project[index].timeAdjusted\n    project[index].punchHistory[latestPunch].hourlyRate = project[index].hourlyRate\n    project[index].timeAdjusted = 0\n    this.setState({ projects: project, clockedIn: false, currentlyPaused: false })\n  }\n\n  getTimeHandler = () => {\n    let time = new Date()\n    let hours = time.getHours()\n    let minutes = time.getMinutes() >= 10 ? time.getMinutes() : '0' + time.getMinutes()\n    return `${hours >= 12 ? hours - 12 : hours}:${minutes} ${hours >= 12 ? 'PM' : 'AM'}`\n  }\n\n  getDateHandler = () => {\n    var today = new Date()\n    var dd = String(today.getDate()).padStart(2, '0')\n    var mm = String(today.getMonth() + 1).padStart(2, '0')\n    var yyyy = today.getFullYear()\n\n    today = mm + '/' + dd + '/' + yyyy\n    return today\n  }\n\n  addNewPunchHandler = () => {\n    let project = this.state.projects\n    let newPunch = {\n      date: this.getDateHandler(),\n      punchIn: this.getTimeHandler(),\n      punchOut: 0,\n      totalSeconds: 0,\n      clockedOut: false,\n      clockInTimeInMS: Date.now(),\n      timeAdjusted: 0,\n      hourlyRate: 0,\n    }\n    if (project[this.state.currentProjectSelectedIndex].punchHistory) {\n      project[this.state.currentProjectSelectedIndex].punchHistory.push(newPunch)\n    } else {\n      project[this.state.currentProjectSelectedIndex].punchHistory = [newPunch]\n    }\n    this.setState({ projects: project })\n  }\n\n  calculateTotalBillable = () => {\n    let project = this.state.projects\n    const minutes = ('0' + Math.floor(project[this.state.currentProjectSelectedIndex].currentSeconds / 60) % 60).slice(-2)\n    const hours = ('0' + Math.floor(project[this.state.currentProjectSelectedIndex].currentSeconds / 3600)).slice(-2)\n    return `${hours} hours, ${minutes} minutes`\n  }\n\n  startTimerHandler = () => {\n    let _this = this\n    let project = this.state.projects\n    this.incrementer = setInterval(() => {\n      project[this.state.currentProjectSelectedIndex].currentSeconds += 1\n      _this.setState({ projects: project })\n    }, 1000)\n    this.setState({ timerRunning: true })\n  }\n\n  pauseTimerHandler = () => {\n    clearInterval(this.incrementer)\n    this.setState({ timerRunning: false })\n  }\n\n  pauseClockHandler = (index) => {\n    if (this.state.clockedIn) {\n      let projects = this.state.projects\n      projects[index].paused = true\n      this.setState({ projects: projects, currentlyPaused: true })\n      this.pauseTimerHandler()\n    } else {\n      toast.error('What is it you\\'re hoping to pause, exactly?')\n    }\n  }\n\n  resumeClockHandler = (index) => {\n    let projects = this.state.projects\n    projects[index].paused = false\n    this.setState({ projects: projects, currentlyPaused: false })\n    this.startTimerHandler()\n  }\n\n  getSeconds = () => {\n    if (this.state.projects[this.state.currentProjectSelectedIndex].punchHistory.length !== 0) {\n      return ('0' + this.state.projects[this.state.currentProjectSelectedIndex].currentSeconds % 60).slice(-2)\n    } else {\n      return '00'\n    }\n  }\n\n  getMinutes = () => {\n    if (this.state.projects[this.state.currentProjectSelectedIndex].punchHistory.length !== 0) {\n      return ('0' + Math.floor(this.state.projects[this.state.currentProjectSelectedIndex].currentSeconds / 60) % 60).slice(-2)\n    } else {\n      return '00'\n    }\n  }\n\n  getHours = () => {\n    if (this.state.projects[this.state.currentProjectSelectedIndex].punchHistory.length !== 0) {\n      return ('0' + Math.floor(this.state.projects[this.state.currentProjectSelectedIndex].currentSeconds / 3600)).slice(-2)\n    } else {\n      return '00'\n    }\n  }\n\n  getTotalProjectTime = (value) => {\n    return ('0' + Math.floor(value.totalSeconds / 3600)).slice(-2) + ':' + ('0' + Math.floor(value.totalSeconds / 60) % 60).slice(-2)\n  }\n\n  formatTimeFromSecondsHandler = (seconds) => {\n    return ('0' + Math.floor(seconds / 3600)).slice(-2) + ':' + ('0' + Math.floor(seconds / 60) % 60).slice(-2) + ':' + ('0' + Math.floor(seconds) % 60).slice(-2)\n  }\n\n  clockInOutHandler = () => {\n    if (this.state.projects[this.state.currentProjectSelectedIndex].punchHistory.length !== 0) {\n      if (!this.state.projects[this.state.currentProjectSelectedIndex].punchHistory[this.state.projects[this.state.currentProjectSelectedIndex].punchHistory.length - 1].clockedOut) {\n        this.clockOutHandler()\n      } else {\n        this.clockInHandler()\n      }\n    } else {\n      this.clockInHandler()\n    }\n  }\n\n  changeProjectInfoHandler = (e, index, infoType) => {\n    let project = this.state.projects\n    if (infoType === 'name') {\n      project[index].name = e.target.value\n      this.setState({ projects: project })\n    } else if (infoType === 'removeProject') {\n      let newProjects = project.slice(0, index).concat(project.slice(index + 1, project.length))\n      if (index === project.length) {\n        this.changeProjectHandler(index - 1)\n      } else {\n        this.changeProjectHandler(index + 1)\n      }\n      this.setState({ projects: newProjects })\n    }\n  }\n\n  modifyTimerHandler = (time) => {\n    if (this.state.clockedIn) {\n      let project = this.state.projects\n      if (project[this.state.currentProjectSelectedIndex].currentSeconds + time < 0) {\n        project[this.state.currentProjectSelectedIndex].timeAdjusted -= project[this.state.currentProjectSelectedIndex].currentSeconds\n        project[this.state.currentProjectSelectedIndex].currentSeconds = 0\n      } else {\n        project[this.state.currentProjectSelectedIndex].currentSeconds += time\n        project[this.state.currentProjectSelectedIndex].timeAdjusted += time\n      }\n      this.setState({ projects: project })\n    } else {\n      toast.error('Maybe clock in?..')\n    }\n  }\n\n  modifyHourlyRateHandler = (e, index) => {\n    let project = this.state.projects\n    project[index].hourlyRate = e.target.value\n    this.setState({ projects: project })\n  }\n\n  render() {\n    return (\n      <div className='applicationContainer'>\n        <div className='projectsContainer'>\n          {this.state.projects.map((value, index) => (\n            <Project\n              value={value}\n              index={index}\n              getTotalProjectTime={this.getTotalProjectTime}\n              projectSettingsButtonHandler={this.projectSettingsButtonHandler}\n              currentProjectSelectedIndex={this.state.currentProjectSelectedIndex}\n              changeProjectHandler={this.changeProjectHandler}\n              key={index}\n              changeProjectInfoHandler={this.changeProjectInfoHandler}\n              modifyHourlyRateHandler={this.modifyHourlyRateHandler}\n            />\n          ))}\n          <div className='projectPreviewContainer' onMouseDown={this.addProjectHandler}>\n            <p className='interfaceText' style={{ justifySelf: 'start', marginLeft: '15px' }}>+ Add Project</p>\n          </div>\n        </div>\n        <div className='projectClockDisplayContainer'>\n          <div className='clockContainer'>\n            <div className='clockTimerContainer'>\n              <p className='clockTimer'>{this.getHours()}:{this.getMinutes()}:{this.getSeconds()}</p>\n            </div>\n            <button className='clockInOutButton' onMouseDown={this.clockInOutHandler}>{this.state.clockedIn ? 'Clock Out' : 'Clock In'}</button>\n            <div className='modifyTimerContainer'>\n              <button className='modifyTimerButton' onMouseDown={() => this.modifyTimerHandler(1)}>+1</button>\n              <button className='modifyTimerButton' onMouseDown={() => this.modifyTimerHandler(10)}>+10</button>\n              <button className='modifyTimerButton' onMouseDown={() => this.modifyTimerHandler(60)}>+60</button>\n              <button className='modifyTimerButton' onMouseDown={() => this.modifyTimerHandler(-1)}>-1</button>\n              <button className='modifyTimerButton' onMouseDown={() => this.modifyTimerHandler(-10)}>-10</button>\n              <button className='modifyTimerButton' onMouseDown={() => this.modifyTimerHandler(-60)}>-60</button>\n            </div>\n            <button className='pausePlayTimerButton' onMouseDown={this.state.currentlyPaused ? () => this.resumeClockHandler(this.state.currentProjectSelectedIndex) : () => this.pauseClockHandler(this.state.currentProjectSelectedIndex)}>{this.state.currentlyPaused ? 'Resume' : 'Pause'}</button>\n          </div>\n        </div>\n        <div className='projectDetailsContainer'>\n          {this.state.currentProjectSelectedIndex !== -1 && this.state.projects[this.state.currentProjectSelectedIndex].punchHistory.length > 0 ? this.state.projects[this.state.currentProjectSelectedIndex].punchHistory.map((value, index) => (\n            <Punch\n              value={value}\n              index={index}\n              key={index}\n              formatTimeFromSecondsHandler={this.formatTimeFromSecondsHandler}\n              currentProjectDetails={this.state.projects[this.state.currentProjectSelectedIndex]}\n              formatTimeFromSecondsHandler={this.formatTimeFromSecondsHandler}\n            />\n          )) :\n            this.state.currentProjectSelectedIndex !== -1 && this.state.projects[this.state.currentProjectSelectedIndex].punchHistory ?\n              <p style={{ marginLeft: '15px' }}>No previous punches recorded. Clock in to create one</p>\n              :\n              <p>Select a project!</p>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Project extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      displaySettings: false,\n    }\n  }\n\n  projectSettingsButtonHandler = (project, e) => {\n    e.stopPropagation()\n    this.setState({ displaySettings: !this.state.displaySettings })\n  }\n\n  SettingsBanner = (props) => {\n    if (props.displaySettings) {\n      return (\n        <div className='projectSettingsContainer'>\n          <p style={{ marginLeft: '15px' }}>Project Name: </p>\n          <input type='text' value={props.value.name} onChange={(e) => { props.changeProjectInfoHandler(e, props.value.projectID, 'name') }} className='projectInput'></input>\n          <p style={{ marginLeft: '15px' }}>Hourly Rate: </p>\n          <input type='text' value={props.value.hourlyRate} onChange={(e) => { props.modifyHourlyRateHandler(e, props.value.projectID) }} className='projectInput'></input>\n          <button style={{ marginLeft: '15px' }} className='removeProjectButton' onMouseDown={(e) => props.changeProjectInfoHandler(e, props.value.projectID, 'removeProject')}>Remove Project</button>\n        </div>\n      )\n    } else {\n      return (\n        <div className='projectSettingsContainer closedProjectSettings'>\n\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className={`projectPreviewContainer ${this.props.currentProjectSelectedIndex === this.props.index ? 'projectPreviewSelected' : ''}`} onMouseDown={() => this.props.changeProjectHandler(this.props.index)}>\n        <button className='projectSettingsButton' style={this.props.value.clockedIn ? { color: 'white' } : {}} onMouseDown={(e) => this.projectSettingsButtonHandler(this.props.value, e)}><FontAwesomeIcon icon={faCog} /></button>\n        <p className='interfaceText' style={{ justifySelf: 'start', marginLeft: '15px' }}>{this.props.value.name}</p>\n        <p className='interfaceText'>Current Hours: {this.props.getTotalProjectTime(this.props.value)}</p>\n        <this.SettingsBanner displaySettings={this.state.displaySettings} value={this.props.value} changeProjectInfoHandler={this.props.changeProjectInfoHandler} modifyHourlyRateHandler={this.props.modifyHourlyRateHandler} />\n      </div>\n    )\n  }\n}\n\nclass Punch extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showDetails: false,\n    }\n  }\n\n  displayDetailsHandler = () => {\n    this.setState({ showDetails: !this.state.showDetails })\n  }\n\n  PunchDetailsContainer = (props) => {\n    let adjustedSeconds = props.value.clockedOut ? props.value.timeAdjusted : props.projectDetails.timeAdjusted\n    if (props.showDetails) {\n      return (\n        <div className='punchDetailsContainer'>\n          <p className='interfaceText'>Total Earned: ${(props.value.clockedOut ? (props.value.hourlyRate / 3600) * props.value.totalSeconds : (props.projectDetails.hourlyRate / 3600) * props.projectDetails.currentSeconds).toFixed(2)}</p>\n          <PieChart\n            animate={true}\n            animationDuration={500}\n            animationEasing=\"ease-out\"\n            cx={50}\n            cy={50}\n            data={[\n              {\n                color: '#0F3B2A',\n                title: 'Total Time Unadjusted',\n                value: props.value.clockedOut ? props.value.totalSeconds - props.value.timeAdjusted : props.projectDetails.currentSeconds - props.projectDetails.timeAdjusted\n              },\n              {\n                color: '#2FBA85',\n                title: 'Total Time Adjusted',\n                value: adjustedSeconds\n              },\n              {\n                color: '#1B6E4E',\n                title: 'Total Seconds',\n                value: props.value.clockedOut ? props.value.totalSeconds : props.projectDetails.currentSeconds\n              }\n            ]}\n            label={false}\n            labelPosition={50}\n            lengthAngle={360}\n            lineWidth={100}\n            onClick={undefined}\n            onMouseOut={undefined}\n            onMouseOver={undefined}\n            paddingAngle={0}\n            radius={50}\n            rounded={false}\n            startAngle={0}\n            style={{\n              height: '100px'\n            }}\n          />\n          <p className='interfaceText'>Total time adjusted: {adjustedSeconds < 0 ? '-' : ''}{props.formatTimeFromSecondsHandler(adjustedSeconds < 0 ? Math.abs(adjustedSeconds) : adjustedSeconds)}</p>\n          <p className='interfaceText'>Total time unadjusted: {props.formatTimeFromSecondsHandler(props.value.clockedOut ? props.value.totalSeconds - props.value.timeAdjusted : props.projectDetails.currentSeconds - props.projectDetails.timeAdjusted)}</p>\n        </div>\n      )\n    } else {\n      return (\n        <div className='punchDetailsContainer closedProjectSettings' >\n\n        </div>\n      )\n    }\n\n  }\n\n  render() {\n    return (\n      <div className='projectPunchDetailsContainer'>\n        <p className='interfaceText'>Date: {this.props.value.date}</p>\n        <p className='interfaceText'>Punch in time: {this.props.value.punchIn}</p>\n        <p className='interfaceText'>Punch out time: {this.props.value.punchOut}</p>\n        <p className='interfaceText'>Total billable time: {this.props.formatTimeFromSecondsHandler(this.props.value.clockedOut ? this.props.value.totalSeconds : this.props.currentProjectDetails.currentSeconds)}</p>\n        <span className={`openPunchDetailsLine1 ${this.state.showDetails ? 'punchDetailsLineRotated' : ''}`} />\n        <span className={`openPunchDetailsLine2 ${this.state.showDetails ? 'punchDetailsLineRotated' : ''}`} />\n        <span className='openPunchDetailsContainer' onMouseDown={() => this.displayDetailsHandler()} />\n        <this.PunchDetailsContainer showDetails={this.state.showDetails} projectDetails={this.props.currentProjectDetails} value={this.props.value} index={this.props.index} formatTimeFromSecondsHandler={this.props.formatTimeFromSecondsHandler} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}